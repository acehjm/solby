
/**
 * 插件（自动启用）
 */
plugins {
    // 该插件会导致非springboot项目编译失败，使用dependencyManagement方式替代
    // id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'maven-publish'
}

ext {
    set('springBootVersion', "2.2.0.RELEASE")
}

allprojects {
    group = 'me.solby'
    version = '0.0.8-SNAPSHOT'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }
}

/**
 * 所有子项目生效
 */
subprojects {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/acehjm/solby")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                    password = project.findProperty("gpr.key") ?: System.getenv("GPR_API_KEY")
                }
            }
        }
        publishing {
            publications {
                gpr(MavenPublication) {
                    // 子项目中配置发布jar包
                    // from(components.java)
                }
            }
        }
    }

    // 子项目排除工具模块
    if (project.name == 'xtool') {
        return
    }

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    /**
     * 子项目通用依赖
     */
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
        enabled(false)
    }

}